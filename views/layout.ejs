<!DOCTYPE html>
<html data-ng-app="appIdeas">
  <head>
    <title>{{title}}</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.css">
    <link rel="stylesheet" href="/bower_components/ng-dialog/css/ngDialog-theme-default.min.css">
    <link rel="stylesheet" href="/bower_components/ng-dialog/css/ngDialog-theme-plain.min.css">
    <link rel="stylesheet" href="/bower_components/ng-dialog/css/ngDialog.min.css">
    <link rel="stylesheet" href="/bower_components/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="/bower_components/font-awesome/css/font-awesome.css.map">
    <link rel="stylesheet" href="/bower_components/ngprogress/ngProgress.css">
    <link rel="stylesheet" href="/bower_components/textAngular/dist/textAngular.css">
    <link rel="stylesheet" href="/bower_components/angular-loading-bar/build/loading-bar.min.css">
    <link rel="stylesheet" href="/styles/clean-blog.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/mine.css">
    <!--STYLES END-->
    <!-- Custom Fonts -->
    <link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link href='http://fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800' rel='stylesheet' type='text/css'>

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
  </head>

  <body>

  <div ng-view></div>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/jst.js"></script>
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/bower_components/jquery/dist/jquery.min.js"></script>
    <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="/bower_components/angular/angular.js"></script>
    <script src="/bower_components/angular-route/angular-route.js"></script>
    <script src="/bower_components/angular-smart-table/dist/smart-table.min.js"></script>
    <script src="/bower_components/ng-dialog/js/ngDialog.min.js"></script>
    <script src="/bower_components/angular-cookies/angular-cookies.min.js"></script>
    <script src="/bower_components/ngprogress/build/ngprogress.min.js"></script>
    <script src="/bower_components/lodash/dist/lodash.min.js"></script>
    <script src="/bower_components/restangular/dist/restangular.min.js"></script>
    <script src="/bower_components/angular-route-styles/route-styles.js"></script>
    <script src="/bower_components/textAngular/dist/textAngular-rangy.min.js"></script>
    <script src="/bower_components/textAngular/dist/textAngular-sanitize.min.js"></script>
    <script src="/bower_components/textAngular/dist/textAngular.min.js"></script>
    <script src="/bower_components/angular-loading-bar/build/loading-bar.min.js"></script>
    <script src="/js/module.js"></script>
    <script src="/js/modules/auth/module.js"></script>
    <script src="/js/modules/core/module.js"></script>
    <script src="/js/modules/footer/module.js"></script>
    <script src="/js/modules/home/module.js"></script>
    <script src="/js/modules/idea/module.js"></script>
    <script src="/js/modules/navbar/module.js"></script>
    <script src="/js/modules/poster/module.js"></script>
    <script src="/js/modules/routes/module.js"></script>
    <script src="/js/modules/userhome/module.js"></script>
    <script src="/js/modules/auth/controller.js"></script>
    <script src="/js/modules/auth/verifyLoginService.js"></script>
    <script src="/js/modules/core/config.js"></script>
    <script src="/js/modules/home/controller.js"></script>
    <script src="/js/modules/idea/controller.js"></script>
    <script src="/js/modules/navbar/controller.js"></script>
    <script src="/js/modules/poster/controller.js"></script>
    <script src="/js/modules/routes/config.js"></script>
    <script src="/js/modules/userhome/controller.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
